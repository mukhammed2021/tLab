{"version":3,"mappings":"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","names":["global","globalThis","__symbol__","name","symbolPrefix","initZone","performance","mark","performanceMeasure","label","ZoneImpl","assertZonePatched","patches","Error","root","zone","current","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","hasOwnProperty","checkDuplicate","perfName","_api","_parent","_name","constructor","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","zoneTask","type","data","isPeriodic","isRefreshable","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","cancelFn","invokeTask","unknown","scheduling","zoneDelegates","_zoneDelegates","_updateTaskCount","scheduleTask","newZone","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","runCount","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","nativeScheduleMicroTask","func","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","loadZone","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","Zone","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","window","internalWindow","_global","REMOVE_ATTRIBUTE","patchPrototype","fnNames","prototypeDesc","isPropertyWritable","patched","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","returnValue","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","previousValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","isFunction","isNumber","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","originalDelegate","once","globalCallback","context","isCapture","tasks","errors","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","buildEventListenerOptions","passive","capture","customScheduleGlobal","isExisting","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","splice","removeAbortListener","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","unpatchedEvents","passiveEvents","copyEventListenerOptions","newOptions","signal","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","aborted","constructorName","targetSource","onAbort","unshift","onPropertySymbol","findEventTasks","keys","match","exec","evtName","symbolCaptureEventName","captureTasks","removeTasks","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","patchQueueMicrotask","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","handle","refresh","clearTask","delay","timer","originalRefresh","id","patchCustomElements","callbacks","customElements","eventTargetPatch","eventNames","EVENT_TARGET","patchEvent","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","patchBrowser","legacyPatch","clear","blockingMethods","s","XMLHttpRequestEventTarget","patchXHR","XHR_TASK","XHR_SYNC","XHR_LISTENER","XHR_SCHEDULED","XHR_URL","XHR_ERROR_BEFORE_SCHEDULED","XMLHttpRequest","XMLHttpRequestPrototype","findPendingTask","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","newListener","readyState","DONE","loadTasks","status","oriInvoke","storedTask","sendNative","placeholderCallback","abortNative","openNative","XMLHTTPREQUEST_SOURCE","fetchTaskAborting","fetchTaskScheduling","url","geolocation","findPromiseRejectionHandler","e","eventTasks","forEach","PromiseRejectionEvent","evt","promise","reason","rejection","patchPromise","readableObjectToString","JSON","stringify","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","v","resolvePromise","wasCalled","wrapper","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","ZONE_AWARE_PROMISE_TO_STRING","AggregateError","withResolvers","res","rej","any","values","Symbol","iterator","Promise","promises","finished","race","onResolve","onReject","all","allWithCallback","allSettled","P","thenCallback","errorCallback","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","zoneify","resultPromise","ctor","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","targetName","method","nativeDelegate","opts","descriptor","patchUtil","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchCommon","Zone$1","$localize","locale"],"ignoreList":[0],"sources":["node_modules/zone.js/fesm2015/zone.js","angular:polyfills:angular:polyfills"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// Note that passive event listeners are now supported by most modern browsers,\n// including Chrome, Firefox, Safari, and Edge. There's a pending change that\n// would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n// from the codebase will reduce the final code size for existing apps that still use zone.js.\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n","import 'angular:locale/data:en-US';\nimport 'zone.js';(globalThis.$localize ??= {}).locale = \"___NG_LOCALE_INSERT___\";\n"]}